{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGiB,MAAXC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAMhB,SAANC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA0BA,SAAJO,GAAQR,SAAEA,EAAQC,MAAEA,IAC3BR,EAAAgB,OAAOC,QAAQ,sBAAoBV,QAAiBC,M,CAIzC,SAAJU,GAAUX,SAAEA,EAAQC,MAAEA,IAC7BR,EAAAgB,OAAOG,QAAQ,uBAAqBZ,QAAeC,M,CA5C9BN,EAAlBC,KAAKiB,iBAAiB,UAiBL,SAAIC,GACxBA,EAAEC,iBAEmB,MAAfC,EAAW,IAAIC,SAASH,EAAEI,eAC1BC,EAAe,GAErB,IAAK,MAAOC,EAAKC,KAAUL,EAASM,UAClCH,EAAaC,GAAOG,OAAOF,GAGQ,IAAjCG,OAAEA,EAAMC,KAAEA,EAAIxB,MAAEA,GAAUkB,EAEc,IAAvC,IAAIO,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCzB,GAASwB,EACT1B,EAAc2B,EAAGzB,GAAO0B,KAAKhB,GAAWiB,MAAMpB,GAEGb,EAA5CC,KAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Ищим селектор формы\nconst refs = {\n  form: document.querySelector('.form'),\n};\n// Ставим слушателя на сабмит\nrefs.form.addEventListener('submit', onCreatePromises);\n\n// Планируем промис\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// функция обработки данных\nfunction onCreatePromises(e) {\n  e.preventDefault(); // Блокируем перезагрузку\n\n  const formData = new FormData(e.currentTarget); // Создаем объект с сылкой на эл, накотором произошло событие при всплыти\n  const dataArgument = {};\n\n  for (const [key, value] of formData.entries()) {\n    dataArgument[key] = Number(value);\n  } // Переберем и создадим пары значений и ключей\n\n  let { amount, step, delay } = dataArgument; // создадим переменную-обьект с аргументами и запишем dataArgument\n\n  for (let i = 1; i <= amount; i += 1) {\n    delay += step;\n    createPromise(i, delay).then(onSuccess).catch(onError); // вызов промиса и пристегиваем резулькат работы коллбеков\n\n    refs.form.reset(); // восстановим стандартные значения всем элементам формы\n  }\n}\n\n//Функция ошибки\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\n// функция успеха\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onError","Notify","failure","$47d4ff9957288465$var$onSuccess","success","addEventListener","e","preventDefault","formData","FormData","currentTarget","dataArgument","key","value","entries","Number","amount","step","i","then","catch","reset"],"version":3,"file":"03-promises.35309893.js.map"}